funkcje:
- słowo per sejm
- słowo per partia
- słowo per polityk
- ostatnie tweety z danym słowem ogólnie/polityk/partia

modele:
- party
  > name
  > logo
- politician
  > twitter id
  > last update
  > party id
- word
  > date
  > word
  > politician id
  > count
- wordindex - tabela przechowująca słowa, które wystąpiły chociaż raz
  > word

lamda-scraper:
- ściagamy dane polityka P z dnia D
- zliczamy słowa
- dodajemy słowa do bazy 'word'
- aktualizujemy last update polityka

infra - azure:
- app service dla frontend
- lambda z timerem do ściągania wpisów polityków - wpisuje do db
- baza danych sql
- lambda per endpoint - ściąga dane z db


API:
url                                                               methods           description
/api/v1/politicians                                               GET, POST         retrieve list of politicians
/api/v1/politicians/{politicianId}/summary?interval=-1d           GET               retrieve summary of words by specific politician
/api/v1/parties                                                   GET, POST         retrieve list of parties
/api/v1/parties/{partyId}/summary?interval=-1d                    GET               retrieve summary of words by specific party
/api/v1/words?politicianId=                                       GET               retrieve list of words
/api/v1/words/{word}/summary?interval=-1d                         GET               retrieve summary of specific word


Possible improvements:
- Cashing requests(summaries by summary parameters checksum) on Redis-like DB 
- Add more politicains 
- Add poltics commentators xD
